<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spj.entity.SetorMapper">
    
    <select id="getSetor" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT DISTINCT idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        kodeJenis,
        decode(temuan,1,'YA',2,'YA',0,'TIDAK') AS temuan,
        nilaiSetor,
        kegiatan
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        <!--to_char(tmsetor.d_setor,'dd-MM-yyyy') as tglSetor,-->
        tmsetor.d_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        c_temuan as temuan,  
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor,
        tmdpakegiatan.c_kegiatan||' / '||tmdpakegiatan.n_kegiatan as kegiatan
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        LEFT JOIN
        tmdpakegiatan
        ON tmsetorrinci.i_idkegiatan = tmdpakegiatan.i_id
        
        WHERE tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.C_SETOR_JUKOR = '0'
        AND tmsetor.c_jenis = '3'
        AND tmsetor.c_beban = 'LS'
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
    
    <select id="getSetorTU" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT DISTINCT idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        kodeJenis,
        decode(temuan,1,'YA',2,'YA',0,'TIDAK') AS temuan,
        nilaiSetor,
        kegiatan
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        <!--to_char(tmsetor.d_setor,'dd-MM-yyyy') as tglSetor,-->
        tmsetor.d_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        c_temuan as temuan,  
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor,
        tmdpakegiatan.c_kegiatan||' / '||tmdpakegiatan.n_kegiatan as kegiatan
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        LEFT JOIN
        tmdpakegiatan
        ON tmsetorrinci.i_idkegiatan = tmdpakegiatan.i_id
        
        WHERE tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.c_jenis = '3'
        AND tmsetor.c_beban = 'TU'
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
    
    <select id="getSetorBantuan" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT  DISTINCT idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        kodeJenis,
        nilaiSetor,
        kegiatan
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        e_setor as dokSetor,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor,
        tmdpabtlbantuan.c_kegiatan||' / '||tmdpabtlbantuan.n_kegiatan as kegiatan
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        LEFT JOIN
        tmdpabtlbantuan
        ON tmsetorrinci.i_idbl = tmdpabtlbantuan.i_id
        WHERE       tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.c_jenis = '2'
        AND tmsetor.c_beban = 'LS'
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
        
    <select id="getSetorBiaya" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT  DISTINCT idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        kodeJenis,
        nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        e_setor as dokSetor,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor
        FROM tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        WHERE  tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM TMSETORCETAK
        WHERE tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.c_beban = 'LS'
        AND tmsetor.c_jenis = '4'
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
    
    <select id="getSetorBtl" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT  DISTINCT idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        kodeJenis,
        nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        e_setor as dokSetor,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor
        FROM tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        WHERE  tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM TMSETORCETAK
        WHERE tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.C_SETOR_JUKOR = '0'
        AND tmsetor.c_beban = 'LS'
        AND tmsetor.c_jenis = '1'
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
    
    <select id="getSetorUP" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT   idSetor,
        kodeSetor,
        tglSetor,
        tahunAngg,
        decode(kodeBeban,'UP','UP/GU','TU','TU') AS kodeBeban,
        nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        WHERE       tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND (tmsetor.c_beban = 'UP' <!-- OR tmsetor.c_beban = 'TU' -->)
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        order by kodeSetor
    </select>
    
    <select id="getEditSetor" parameterType="java.util.Map" resultType="spp.model.SetorRinci">
        SELECT i_idskpd, idbl,  idkegiatan, sum(idsetor) AS idsetor,
        sum(idsetorrinci) AS idsetorrinci,idakun AS idakun, c_akun AS akun,
        n_akun AS namaakun, sum(nilaianggaran) AS nilaianggaran,
        sum(nilaisetor) AS nilaisetor
        FROM (
        SELECT i_idskpd, i_id AS idbl, i_idkegiatan as idkegiatan , 0 AS idsetor,
        0 AS idsetorrinci, i_idbas as idakun, 
        v_angg_tapd AS nilaianggaran,
        0 AS nilaisetor
        FROM tmdpabl
        WHERE tmdpabl.c_angg_tahun = #{tahun}
        and  tmdpabl.i_idskpd = #{idskpd}
        and tmdpabl.i_idkegiatan = #{idkegiatan}
        UNION ALL 
        SELECT tmsetor.I_IDSKPD, tmsetorrinci.i_idbl AS idbl, tmsetorrinci.i_idkegiatan AS idkegiatan, i_idsetor AS idsetor,
        tmsetorrinci.i_id AS idsetorrinci, i_idbas AS idakun,  0 AS nilaianggaran,
        v_setor AS nilaisetor
        FROM tmsetor , tmsetorrinci
        WHERE tmsetor.I_id = tmsetorrinci.i_idsetor
        AND tmsetor.c_tahun_anggaran = #{tahun}
        AND tmsetorrinci.i_idkegiatan = #{idkegiatan}
        AND tmsetor.i_id= #{idSetor}
        )   xxx , trbas 
        WHERE idakun = trbas.i_id 
        GROUP BY i_idskpd, idbl,  idkegiatan, 
        idakun , c_akun ,  n_akun 
    </select>
     
    <select id="getCountEditSetor" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) as banyak from(
        SELECT i_idskpd, idbl,  idkegiatan, sum(idsetor) AS idsetor,
        sum(idsetorrinci) AS idsetorrinci,idakun AS idakun, c_akun AS akun,
        n_akun AS namaakun, sum(nilaianggaran) AS nilaianggaran,
        sum(nilaisetor) AS nilaisetor
        FROM (
        SELECT i_idskpd, i_id AS idbl, i_idkegiatan as idkegiatan , 0 AS idsetor,
        0 AS idsetorrinci, i_idbas as idakun, 
        v_angg_tapd AS nilaianggaran,
        0 AS nilaisetor
        FROM tmdpabl
        WHERE tmdpabl.c_angg_tahun = #{tahun}
        and  tmdpabl.i_idskpd = #{idskpd}
        and tmdpabl.i_idkegiatan = #{idkegiatan}
        UNION ALL 
        SELECT tmsetor.I_IDSKPD, tmsetorrinci.i_idbl AS idbl, tmsetorrinci.i_idkegiatan AS idkegiatan, i_idsetor AS idsetor,
        tmsetorrinci.i_id AS idsetorrinci, i_idbas AS idakun,  0 AS nilaianggaran,
        v_setor AS nilaisetor
        FROM tmsetor , tmsetorrinci
        WHERE tmsetor.I_id = tmsetorrinci.i_idsetor
        AND tmsetor.c_tahun_anggaran = #{tahun}
        AND tmsetorrinci.i_idkegiatan = #{idkegiatan}
        AND tmsetor.i_id= #{idSetor}
        )   xxx , trbas 
        WHERE idakun = trbas.i_id 
        GROUP BY i_idskpd, idbl,  idkegiatan, 
        idakun , c_akun ,  n_akun 
        )
    </select>
    
    <select id="getCountSetor" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        e_setor as dokSetor,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS v_setor
        FROM tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        WHERE  tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM TMSETORCETAK
        WHERE tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.C_SETOR_JUKOR = '0'
        )
    </select>
    
    <select id="getCountSetorTU" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        <!--to_char(tmsetor.d_setor,'dd-MM-yyyy') as tglSetor,-->
        tmsetor.d_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        c_jenis as kodeJenis,
        c_temuan as temuan,  
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor,
        tmdpakegiatan.c_kegiatan||' / '||tmdpakegiatan.n_kegiatan as kegiatan
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        LEFT JOIN
        tmdpakegiatan
        ON tmsetorrinci.i_idkegiatan = tmdpakegiatan.i_id
        
        WHERE tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND tmsetor.c_jenis = '3'
        AND tmsetor.c_beban = 'TU'
        )
    </select>
    
    <select id="getCountSetorUpGu" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT   tmsetor.I_ID as idSetor,
        tmsetor.i_setor as kodeSetor,
        tmsetor.D_setor as tglSetor,
        tmsetor.C_TAHUN_ANGGARAN as tahunAngg,
        c_beban as kodeBeban,
        (SELECT   SUM (v_setor)
        FROM   tmsetorrinci
        WHERE   tmsetor.I_ID = tmsetorrinci.i_idsetor)
        AS nilaiSetor
        FROM      tmsetor
        LEFT JOIN
        tmsetorrinci
        ON tmsetor.I_ID = tmsetorrinci.i_idsetor
        WHERE       tmsetor.C_ANGG_TAHUN = #{tahun}
        AND tmsetor.I_IDSKPD = #{idskpd}
        AND NOT EXISTS (SELECT   1
        FROM   TMSETORCETAK
        WHERE   tmsetor.I_ID = TMSETORCETAK.i_id)
        AND tmsetor.C_SETOR = '0'
        AND (tmsetor.c_beban = 'UP' <!-- OR tmsetor.c_beban = 'TU'-->)
        )
    </select>
    
    <select id="getForRinci" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   idBl,
        idKegiatan,
        idSetorrinci,
        idAkun,
        akun,
        namaAkun,
        nilaiAnggaran,
        nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   
        TMDPABL.I_ID AS idBl,
        TMDPABL.I_IDKEGIATAN AS idKegiatan,
        TMSETORRINCI.I_ID AS idSetorrinci,
        TMDPABL.I_IDBAS AS idAkun,
        C_AKUN AS akun,
        N_AKUN AS namaAkun,
        V_ANGG_TAPD AS nilaiAnggaran,
        TMSETORRINCI.V_SETOR AS nilaiSetor 
        FROM         TMDPABL
        LEFT JOIN
        TMSETORRINCI
        ON TMDPABL.I_IDKEGIATAN = TMSETORRINCI.I_IDKEGIATAN
        INNER JOIN
        TRBAS
        ON TRBAS.I_ID = TMDPABL.I_IDBAS
        WHERE       TMDPABL.C_ANGG_TAHUN = #{tahun}
        AND TMDPABL.I_IDSKPD = #{idskpd}
        AND TMDPABL.I_IDKEGIATAN = #{idkegiatan}
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}   

    </select>
    
    <select id="getForAddRinci" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   idBl,
        idKegiatan,
        idSetorrinci,
        idAkun,
        akun,
        namaAkun,
        nilaiAnggaran,
        nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.*
        FROM   (SELECT   
        TMDPABL.I_ID AS idBl,
        TMDPABL.I_IDKEGIATAN AS idKegiatan,
        0 AS idSetorrinci,
        TMDPABL.I_IDBAS AS idAkun,
        C_AKUN AS akun,
        N_AKUN AS namaAkun,
        V_ANGG_TAPD AS nilaiAnggaran,
        '0' AS nilaiSetor 
        FROM         TMDPABL
        INNER JOIN
        TRBAS
        ON TRBAS.I_ID = TMDPABL.I_IDBAS
        WHERE       TMDPABL.C_ANGG_TAHUN = #{tahun}
        AND TMDPABL.I_IDSKPD = #{idskpd}
        AND TMDPABL.I_IDKEGIATAN = #{idkegiatan}
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}   

    </select>
    
    <select id="getForRinciBiaya" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   
        tmdpabiaya.I_ID AS idBl,
        tmdpabiaya.I_idbas As idAkun,
        c_akun AS akun,
        n_akun AS namaAkun,
        v_angg_tapd AS nilaiAnggaran,
        nvl(tmsetorrinci.v_setor,0) AS nilaiSetor
        FROM    tmdpabiaya
        INNER JOIN
        trbas
        ON tmdpabiaya.I_idbas = trbas.i_id
        LEFT JOIN
        tmsetorrinci
        ON tmdpabiaya.I_idbas = tmsetorrinci.i_idbas 
        <if test="idSetor != null and idSetor != '' and idSetor != '-' ">
            AND i_idsetor = #{idSetor}
        </if> 
       
        WHERE   tmdpabiaya.c_angg_tahun = #{tahun}
        AND c_akun LIKE '6.2%'
        
    </select>
    
    <select id="getForRinciBtl" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        
        SELECT tmdpabtl.i_id AS idBl,
        tmdpabtl.i_idbas AS idAkun,
        trbas.c_akun AS akun, 
        trbas.n_akun AS namaAkun,
        <!--min(tmdpabtl.v_angg_tapd) AS nilaiAnggaran,-->
        sum(tmspprincibtl.v_spp) as nilaiAnggaran ,
        NVL (tmsetorrinci.v_setor, 0) AS nilaiSetor
        FROM tmdpabtl INNER JOIN trbas
        ON tmdpabtl.i_idbas = trbas.i_id AND tmdpabtl.i_idskpd = #{idskpd}
        left join tmspprincibtl on  tmdpabtl.I_ID = tmspprincibtl.I_IDBTL
        inner join tmsp2d on  tmsp2d.I_IDspp = tmspprincibtl.I_IDspp and c_sp2d_sah ='1'
        LEFT JOIN tmsetorrinci
        ON tmdpabtl.i_idbas = tmsetorrinci.i_idbas 
        <if test="idSetor != null and idSetor != '' and idSetor != '-' ">
            AND i_idsetor = #{idSetor}
        </if>
        
        WHERE tmdpabtl.c_angg_tahun = #{tahun}
        AND SUBSTR (trbas.c_akun, 1, 5) IN ('5.1.1', '5.1.2', '5.1.8')
        group by tmdpabtl.i_id ,
        tmsetorrinci.v_setor,
        tmdpabtl.i_idbas ,
        trbas.c_akun , 
        trbas.n_akun 
        order by 3

       
    </select>
    
    <select id="getForAddRinciBiaya" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   
        tmdpabiaya.I_ID AS idBl,
        tmdpabiaya.I_idbas As idAkun,
        c_akun AS akun,
        n_akun AS namaAkun,
        v_angg_tapd AS nilaiAnggaran,
        <!-- nvl(tmsetorrinci.v_setor,0) AS nilaiSetor -->
        0 AS nilaiSetor
        FROM 
        tmdpabiaya
        INNER JOIN
        trbas
        ON tmdpabiaya.I_idbas = trbas.i_id
        LEFT JOIN tmsetorrinci
        ON tmdpabiaya.I_idbas = tmsetorrinci.i_idbas 
        <!-- AND i_idsetor = '' -->
        
        WHERE   tmdpabiaya.c_angg_tahun = #{tahun}
        AND c_akun LIKE '6.2%'
        
    </select>
    
    <select id="getForAddRinciBtl" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT tmdpabtl.i_id AS idBl,
        tmdpabtl.i_idbas AS idAkun,
        trbas.c_akun AS akun, 
        trbas.n_akun AS namaAkun,
        <!--min(tmdpabtl.v_angg_tapd) AS nilaiAnggaran,-->
        sum(tmspprincibtl.v_spp)  as nilaiAnggaran ,
        0 AS nilaiSetor
        FROM tmdpabtl INNER JOIN trbas
        ON tmdpabtl.i_idbas = trbas.i_id AND tmdpabtl.i_idskpd = #{idskpd}
        left join tmspprincibtl on  tmdpabtl.I_ID = tmspprincibtl.I_IDBTL
        inner join tmsp2d on  tmsp2d.I_IDspp = tmspprincibtl.I_IDspp and c_sp2d_sah ='1'
        LEFT JOIN tmsetorrinci
        ON tmdpabtl.i_idbas = tmsetorrinci.i_idbas 
       
        WHERE tmdpabtl.c_angg_tahun = #{tahun}
        AND SUBSTR (trbas.c_akun, 1, 5) IN ('5.1.1', '5.1.2', '5.1.8')
        group by tmdpabtl.i_id ,
        tmdpabtl.i_idbas ,
        trbas.c_akun , 
        trbas.n_akun 
        order by 3

    </select>
    
    <select id="getForRinciBantuan" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT 
        tmdpabtlbantuan.I_ID AS idBl,
        tmdpabtlbantuan.I_idbas As idAkun,
        tmdpabtlbantuan.c_kegiatan AS kodeKeg, 
        tmdpabtlbantuan.n_kegiatan AS namaKeg, 
        trbas.c_akun AS akun,
        trbas.n_akun AS namaAkun, 
        tmdpabtlbantuan.v_angg_tapd AS nilaiAnggaran,
        NVL (tmsetorrinci.v_setor, 0) AS nilaiSetor
       
        FROM tmdpabtlbantuan INNER JOIN trbas
        ON tmdpabtlbantuan.i_idbas = trbas.i_id
        AND tmdpabtlbantuan.c_kegiatan = #{kegiatan}             
        LEFT JOIN tmsetorrinci
        ON tmdpabtlbantuan.i_idbas = tmsetorrinci.i_idbas
        AND i_idsetor = #{idSetor}
        WHERE tmdpabtlbantuan.c_angg_tahun = #{tahun}
     
        
    </select>
    
    <select id="getCountForRinciBantuan" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT 
        tmdpabtlbantuan.c_kegiatan, 
        tmdpabtlbantuan.n_kegiatan, 
        trbas.c_akun,
        trbas.n_akun, 
        tmdpabtlbantuan.v_angg_tapd,
        NVL (tmsetorrinci.v_setor, 0) AS nilai_setoran
       
        FROM tmdpabtlbantuan INNER JOIN trbas
        ON tmdpabtlbantuan.i_idbas = trbas.i_id
        AND tmdpabtlbantuan.c_kegiatan = #{kegiatan}             
        LEFT JOIN tmsetorrinci
        ON tmdpabtlbantuan.i_idbas = tmsetorrinci.i_idbas
        <if test="idSetor != null and idSetor != '' and idSetor != '-' ">
            AND i_idsetor = #{idSetor}
        </if> 
        WHERE tmdpabtlbantuan.c_angg_tahun = #{tahun}
        )
    </select>
    
    <select id="getCountForRinciBiaya" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT  tmdpabiaya.I_idbas,
        c_akun,
        n_akun,
        v_angg_tapd,
        tmsetorrinci.v_setor AS nilai_setoran
        
        FROM tmdpabiaya
        INNER JOIN
        trbas
        ON tmdpabiaya.I_idbas = trbas.i_id
        LEFT JOIN
        tmsetorrinci
        ON tmdpabiaya.I_idbas = tmsetorrinci.i_idbas 
        <if test="idSetor != null and idSetor != '' and idSetor != '-' ">
            AND i_idsetor = #{idSetor}
        </if> 
       
        WHERE   tmdpabiaya.c_angg_tahun = #{tahun}
        AND c_akun LIKE '6.2%'
        )
    </select>
    
    <select id="getCountForRinciBtl" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT tmdpabtl.i_id AS idBl,
        tmdpabtl.i_idbas AS idAkun,
        trbas.c_akun AS akun, 
        trbas.n_akun AS namaAkun,
        <!--min(tmdpabtl.v_angg_tapd) AS nilaiAnggaran,-->
        sum(tmspprincibtl.v_spp) as nilaiAnggaran ,
        min(NVL (tmsetorrinci.v_setor, 0)) AS nilaiSetor
        FROM tmdpabtl INNER JOIN trbas
        ON tmdpabtl.i_idbas = trbas.i_id AND tmdpabtl.i_idskpd = #{idskpd}
        left join tmspprincibtl on  tmdpabtl.I_ID = tmspprincibtl.I_IDBTL
        inner join tmsp2d on  tmsp2d.I_IDspp = tmspprincibtl.I_IDspp and c_sp2d_sah ='1'
        LEFT JOIN tmsetorrinci
        ON tmdpabtl.i_idbas = tmsetorrinci.i_idbas 
        <if test="idSetor != null and idSetor != '' and idSetor != '-' ">
            AND i_idsetor = #{idSetor}
        </if> 
        
        WHERE tmdpabtl.c_angg_tahun = #{tahun}
        AND SUBSTR (trbas.c_akun, 1, 5) IN ('5.1.1', '5.1.2', '5.1.8')
        group by tmdpabtl.i_id ,
        tmdpabtl.i_idbas ,
        trbas.c_akun , 
        trbas.n_akun 
        order by 3
        )
    </select>
    
    <select id="getCountForAddRinciBiaya" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT  tmdpabiaya.I_idbas,
        c_akun,
        n_akun,
        v_angg_tapd,
        0 AS nilai_setoran
        
        FROM tmdpabiaya
        INNER JOIN
        trbas
        ON tmdpabiaya.I_idbas = trbas.i_id
        LEFT JOIN
        tmsetorrinci
        ON tmdpabiaya.I_idbas = tmsetorrinci.i_idbas 
        <!-- AND i_idsetor = '' -->
     
        WHERE tmdpabiaya.c_angg_tahun = #{tahun}
        AND c_akun LIKE '6.2%'
        )
    </select>
    
    <select id="getCountForAddRinciBtl" parameterType="java.util.Map"  resultType="java.lang.Integer">
        SELECT count(*) as banyak from(
        SELECT tmdpabtl.i_id AS idBl,
        tmdpabtl.i_idbas AS idAkun,
        trbas.c_akun AS akun, 
        trbas.n_akun AS namaAkun,
        0 as nilaiAnggaran ,
        min(NVL (tmsetorrinci.v_setor, 0)) AS nilaiSetor
        FROM tmdpabtl INNER JOIN trbas
        ON tmdpabtl.i_idbas = trbas.i_id AND tmdpabtl.i_idskpd = #{idskpd}
        left join tmspprincibtl on  tmdpabtl.I_ID = tmspprincibtl.I_IDBTL
        inner join tmsp2d on  tmsp2d.I_IDspp = tmspprincibtl.I_IDspp and c_sp2d_sah ='1'
        LEFT JOIN tmsetorrinci
        ON tmdpabtl.i_idbas = tmsetorrinci.i_idbas 
       
        WHERE tmdpabtl.c_angg_tahun = #{tahun}
        AND SUBSTR (trbas.c_akun, 1, 5) IN ('5.1.1', '5.1.2', '5.1.8')
        group by tmdpabtl.i_id ,
        tmdpabtl.i_idbas ,
        trbas.c_akun , 
        trbas.n_akun 
        order by 3
        )
    </select>
    
    <select id="getCountForRinci" parameterType="java.util.Map"  resultType="java.lang.Integer">
        select count(*) as banyak from(
        SELECT   
        TMDPABL.I_ID AS idBl,
        TMDPABL.I_IDKEGIATAN AS idKegiatan,
        0 AS idSetorrinci,
        TMDPABL.I_IDBAS AS idAkun,
        C_AKUN AS akun,
        N_AKUN AS namaAkun,
        V_ANGG_TAPD AS nilaiAnggaran,
        '0' AS nilaiSetor 
        FROM         TMDPABL
        INNER JOIN
        TRBAS
        ON TRBAS.I_ID = TMDPABL.I_IDBAS
        WHERE       TMDPABL.C_ANGG_TAHUN = #{tahun}
        AND TMDPABL.I_IDSKPD = #{idskpd}
        AND TMDPABL.I_IDKEGIATAN = #{idkegiatan}
        )
        
    </select>
    
    <select id="getKegiatan" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   I_ID AS idKegiatan,
        I_IDSKPD as "skpd.idSkpd",
        C_KEGIATAN as "kegiatan.kodeKegiatan",
        N_KEGIATAN AS namaKeg,
        tmdpakegiatan.V_ANGG_TAPD AS pagu
        FROM   tmdpakegiatan
        WHERE   C_ANGG_TAHUN = #{tahun} 
        AND I_IDSKPD = #{idskpd}
        AND c_kegiatan = #{kegiatan}
         
    </select>
    
    <select id="getKegiatanBantuan" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT C_KEGIATAN as "kegiatan.kodeKegiatan",
        N_KEGIATAN AS namaKeg,
        V_ANGG_TAPD AS pagu
        FROM   tmdpabtlbantuan
        WHERE   C_ANGG_TAHUN = #{tahun} 
        AND c_kegiatan = #{kegiatan}
         
    </select>
    
    <select id="getKegiatanById" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   I_ID AS idKegiatan,
        I_IDSKPD AS "skpd.idSkpd",
        C_KEGIATAN AS kodeKeg,
        N_KEGIATAN AS namaKeg,
        tmdpakegiatan.V_ANGG_TAPD AS pagu
        
        FROM   tmdpakegiatan
        WHERE   C_ANGG_TAHUN = #{tahun} 
        AND I_IDSKPD = #{idskpd}
        AND c_kegiatan = 
        
        (
        select c_kegiatan 
        from tmdpakegiatan
        where i_id=
        (
        select distinct i_idkegiatan
        from tmsetorrinci
        where i_idsetor = #{idSetor} 
        ))
        
    </select>
    
    <select id="getKegiatanBantuanById" parameterType="java.lang.Integer"  resultType="spp.model.SetorRinci">
        SELECT c_kegiatan as kodeKeg,
        N_KEGIATAN AS namaKeg,
        V_ANGG_TAPD AS pagu
        FROM tmdpabtlbantuan
        WHERE i_id = (
        SELECT i_idbl
        FROM tmsetorrinci
        WHERE i_idsetor = #{idSetor}
        )

    </select>
    
    <select id="getKodeKegiatanBantuan" parameterType="java.lang.String"  resultType="java.lang.String">
        SELECT c_kegiatan as kodeKeg
        FROM tmdpabtlbantuan
        WHERE i_id = (
        SELECT i_idbl
        FROM tmsetorrinci
        WHERE i_idsetor = #{idSetor}
        )

    </select>
    
    <insert id="insertSetor" parameterType="spp.model.Setor" useGeneratedKeys="true"  keyColumn="I_ID" keyProperty="id">  
        INSERT INTO TMSETOR(
        I_ID,
        C_ANGG_TAHUN,
        I_IDSKPD,
        I_SETOR,
        D_SETOR,
        C_SETOR,
        C_TAHUN_ANGGARAN,
        C_BEBAN,
        C_JENIS,
        C_TEMUAN,
        E_SETOR,
        <if test="jenis == 1">
            I_BKUNO,
        </if>
        <if test="jenis == 3 and beban == 'LS' ">
            I_BKUNO,
        </if>
        <if test="beban == 'TU' ">
            I_IDSPD,
        </if>
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetor.nextval),
        #{tahun},
        #{skpd.idSkpd},
        #{noSetor},
        #{tglSetor},
        0,
        #{tahunAngg},
        #{beban},
        #{jenis},
        #{temuan},
        #{keterangan},
        <if test="jenis == 1" >
            #{noBku},
        </if>
        <if test="jenis == 3 and beban == 'LS' ">
            #{noBku},
        </if>
        <if test="beban == 'TU' ">
            #{idSpd},
        </if>
        #{idEntry},
        sysdate
        )
    </insert>
    
    <insert id="insertSetorBantuan" parameterType="spp.model.Setor" useGeneratedKeys="true"  keyColumn="I_ID" keyProperty="id">  
        INSERT INTO TMSETOR(
        I_ID,
        C_ANGG_TAHUN,
        I_IDSKPD,
        I_SETOR,
        D_SETOR,
        C_SETOR,
        C_TAHUN_ANGGARAN,
        C_BEBAN,
        C_JENIS,
        E_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetor.nextval),
        #{tahun},
        #{skpd.idSkpd},
        #{noSetor},
        #{tglSetor},
        0,
        #{tahunAngg},
        #{beban},
        #{jenis},
        #{keterangan},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <insert id="insertSetorBiaya" parameterType="spp.model.Setor" useGeneratedKeys="true"  keyColumn="I_ID" keyProperty="id">  
        INSERT INTO TMSETOR(
        I_ID,
        C_ANGG_TAHUN,
        I_IDSKPD,
        I_SETOR,
        D_SETOR,
        C_SETOR,
        C_TAHUN_ANGGARAN,
        C_BEBAN,
        C_JENIS,
        E_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetor.nextval),
        #{tahun},
        #{skpd.idSkpd},
        #{noSetor},
        #{tglSetor},
        0,
        #{tahunAngg},
        #{beban},
        #{jenis},
        #{keterangan},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <insert id="insertSetorBtl" parameterType="spp.model.Setor" useGeneratedKeys="true"  keyColumn="I_ID" keyProperty="id">  
        INSERT INTO TMSETOR(
        I_ID,
        C_ANGG_TAHUN,
        I_IDSKPD,
        I_SETOR,
        D_SETOR,
        C_SETOR,
        C_TAHUN_ANGGARAN,
        C_BEBAN,
        C_JENIS,
        E_SETOR,
        I_BKUNO,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetor.nextval),
        #{tahun},
        #{skpd.idSkpd},
        #{noSetor},
        #{tglSetor},
        0,
        #{tahunAngg},
        #{beban},
        #{jenis},
        #{keterangan},
        #{noBku},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <insert id="insertSetorUPGU" parameterType="spp.model.Setor" useGeneratedKeys="true"  keyColumn="I_ID" keyProperty="id">  
        INSERT INTO TMSETOR(
        I_ID,
        C_ANGG_TAHUN,
        I_IDSKPD,
        I_SETOR,
        D_SETOR,
        C_SETOR,
        C_TAHUN_ANGGARAN,
        C_BEBAN,
        C_JENIS,
        E_SETOR,
        <if test="beban == 'LS' ">
            C_SETOR_SA,
        </if>
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetor.nextval),
        #{tahun},
        #{skpd.idSkpd},
        #{noSetor},
        #{tglSetor},
        0,
        #{tahunAngg},
        #{beban},
        3,
        #{keterangan},
        <if test="beban == 'LS' ">
            #{kodeSA},
        </if>
        #{idEntry},
        sysdate
        )
    </insert>
    
    
    <select id="getIdSetor" parameterType="spp.model.SetorRinci"  resultType="spp.model.SetorRinci">
        select MAX(I_ID) As DataTerakhir FROM TMSETOR
    </select>
    
    <insert id="insertSetorRinciUPGU" parameterType="spp.model.SetorRinci"   >
        INSERT INTO TMSETORRINCI(
        I_ID,
        I_IDSETOR,
        V_SETOR,
        <if test="beban == 'TU' ">
            I_IDKEGIATAN,
        </if>   
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetorrinci.nextval),
        #{idsetor},
        #{nilaiSetor},
        <if test="beban == 'TU' ">
            #{idKegiatan},
        </if>
        #{idEntry},
        sysdate
        )
    </insert>
    
    <delete id="deleteSetorRinciBL" parameterType="spp.model.SetorRinci"  >
        DELETE TMSETORRINCI 
        WHERE 
        i_idsetor = #{idsetor}
        <!-- I_IDBL = #{idBl}
        AND I_IDKEGIATAN = #{idkegiatan}
        AND I_IDBAS = #{idAkun} -->
    </delete>  
    
    <insert id="insertSetorRinci" parameterType="spp.model.SetorRinci"   >
        INSERT INTO TMSETORRINCI(
        I_ID,
        I_IDSETOR,
        I_IDBL, 
        I_IDKEGIATAN,
        I_IDBAS,
        V_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetorrinci.nextval),
        #{idsetor},
        #{idBl},
        #{idkegiatan},
        #{idAkun},
        #{nilaiSetor},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <delete id="deleteSetorRinciBantuan" parameterType="spp.model.SetorRinci"  >
        DELETE TMSETORRINCI 
        WHERE 
        I_IDBL = #{idBl}
        AND I_IDBAS = #{idAkun}
    </delete>  
    
    <insert id="insertSetorRinciBantuan" parameterType="spp.model.SetorRinci"   >
        INSERT INTO TMSETORRINCI(
        I_ID,
        I_IDSETOR,
        I_IDBL, 
        I_IDBAS,
        V_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetorrinci.nextval),
        #{idsetor},
        #{idBl},
        #{idAkun},
        #{nilaiSetor},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <delete id="deleteSetorRinciBiaya" parameterType="spp.model.SetorRinci"  >
        delete TMSETORRINCI where I_IDBAS = #{idAkun}
    </delete>  
    
    <insert id="insertSetorRinciBiaya" parameterType="spp.model.SetorRinci"   >
        INSERT INTO TMSETORRINCI(
        I_ID,
        I_IDSETOR,
        I_IDBL, 
        I_IDBAS,
        V_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetorrinci.nextval),
        #{idsetor},
        #{idBl},
        #{idAkun},
        #{nilaiSetor},
        #{idEntry},
        sysdate
        )
    </insert>
    
    <delete id="deleteSetorRinciBtl" parameterType="spp.model.SetorRinci"  >
        delete TMSETORRINCI where I_IDSETOR = #{idsetor}
    </delete>  
    
    <insert id="insertSetorRinciBtl" parameterType="spp.model.SetorRinci"   >
        INSERT INTO TMSETORRINCI(
        I_ID,
        I_IDSETOR,
        I_IDBL, 
        I_IDBAS,
        V_SETOR,
        I_PGUN_REKAM,
        D_PGUN_REKAM
        )
        VALUES 
        (
        (seq_tmsetorrinci.nextval),
        #{idsetor},
        #{idBl},
        #{idAkun},
        #{nilaiSetor},
        #{idEntry},
        sysdate
        )
    </insert>
    
    
    <select id="getSetorById" parameterType="java.lang.Integer"  resultType="spp.model.Setor">
        SELECT  
        T.I_ID AS idSetor,
        T.C_ANGG_TAHUN AS tahun,
        T.I_SETOR AS NoSetor,
        T.D_SETOR AS tglSetor,
        T.C_SETOR AS kodeSetor,
        T.C_TAHUN_ANGGARAN AS tahunAngg,
        T.I_IDSKPD AS "skpd.idSkpd",
        P.N_SKPD AS "skpd.namaSkpd",
        T.C_JENIS AS jenis,
        T.C_BEBAN AS beban,
        T.C_TEMUAN AS temuan,
        T.E_SETOR AS keterangan,
        T.I_BKUNO AS noBku,
        T.I_IDSPD AS idSpd,
        T.C_SETOR_SA AS kodeSA
        FROM TMSETOR T
        LEFT JOIN
        trskpd p
        ON P.I_ID = T.I_IDSKPD
        WHERE T.I_ID = #{value}
        
    </select>
   
    <select id="getSetorByIdBantuan" parameterType="java.lang.Integer"  resultType="spp.model.Setor">
        SELECT   T.I_ID AS idSetor,
        T.C_ANGG_TAHUN AS tahun,
        T.I_SETOR AS NoSetor,
        T.D_SETOR AS tglSetor,
        T.C_SETOR AS kodeSetor,
        T.C_TAHUN_ANGGARAN AS tahunAngg,
        T.I_IDSKPD AS "skpd.idSkpd",
        P.N_SKPD AS "skpd.namaSkpd",
        T.C_JENIS AS jenis,
        T.C_BEBAN AS beban,
        T.E_SETOR AS keterangan
        
        FROM      TMSETOR T
        LEFT JOIN
        trskpd p
        ON P.I_ID = T.I_IDSKPD
        WHERE T.I_ID = #{value}
    </select> 
    
    <select id="getSetorByIdUP" parameterType="java.lang.Integer"  resultType="spp.model.Setor">
        SELECT   T.I_ID AS idSetor,
        T.C_ANGG_TAHUN AS tahun,
        T.I_SETOR AS NoSetor,
        T.D_SETOR AS tglSetor,
        T.C_SETOR AS kodeSetor,
        T.C_TAHUN_ANGGARAN AS tahunAngg,
        T.I_IDSKPD AS "skpd.idSkpd",
        P.N_SKPD AS "skpd.namaSkpd",
        T.C_JENIS AS jenis,
        T.C_BEBAN AS beban,
        R.V_SETOR AS nilaiSetor,
        T.E_SETOR AS keterangan,
        R.I_IDKEGIATAN AS idKegiatan,
        K.C_KEGIATAN ||'/'|| K.N_KEGIATAN AS kegiatan
        
        FROM   TMSETOR T
        LEFT JOIN
        trskpd p
        ON P.I_ID = T.I_IDSKPD
        
        LEFT JOIN 
        TMSETORRINCI R
        ON R.I_IDSETOR = T.I_ID
        
        LEFT JOIN TMDPAKEGIATAN K
        ON R.I_IDKEGIATAN = K.I_ID
        
        WHERE T.I_ID = #{value}
    </select> 
    
    <select id="getSetorByIdBiaya" parameterType="java.lang.Integer"  resultType="spp.model.Setor">
        SELECT  
        T.I_ID AS idSetor,
        T.C_ANGG_TAHUN AS tahun,
        T.I_SETOR AS NoSetor,
        T.D_SETOR AS tglSetor,
        T.C_SETOR AS kodeSetor,
        T.C_TAHUN_ANGGARAN AS tahunAngg,
        T.I_IDSKPD AS "skpd.idSkpd",
        P.N_SKPD AS "skpd.namaSkpd",
        T.C_JENIS AS jenis,
        T.C_BEBAN AS beban,
        T.E_SETOR AS keterangan
        
        FROM      TMSETOR T
        LEFT JOIN
        trskpd p
        ON P.I_ID = T.I_IDSKPD
        WHERE T.I_ID = #{value}
               
    </select>
    
    <select id="getSetorByIdBtl" parameterType="java.lang.Integer"  resultType="spp.model.Setor">
        SELECT  
        T.I_ID AS idSetor,
        T.C_ANGG_TAHUN AS tahun,
        T.I_SETOR AS NoSetor,
        T.D_SETOR AS tglSetor,
        T.C_SETOR AS kodeSetor,
        T.C_TAHUN_ANGGARAN AS tahunAngg,
        T.I_IDSKPD AS "skpd.idSkpd",
        P.N_SKPD AS "skpd.namaSkpd",
        T.C_JENIS AS jenis,
        T.C_BEBAN AS beban,
        T.E_SETOR AS keterangan,
        T.I_BKUNO as noBku
        
        FROM TMSETOR T
        LEFT JOIN
        trskpd p
        ON P.I_ID = T.I_IDSKPD
        WHERE T.I_ID = #{value}
               
    </select>
    
    <delete id="deleteSetorRinci" parameterType="java.lang.Integer" >
        delete TMSETOR where I_ID = #{value}
    </delete>
    
    <delete id="deleteSetorMaster" parameterType="java.lang.Integer" >
        delete TMSETORRINCI where I_IDSETOR = #{value}
    </delete>    
    
    
    <update id="updateSetor" parameterType="spp.model.Setor"   >
        UPDATE TMSETOR
        SET
        D_SETOR = #{tglSetor},
        C_BEBAN = #{beban},
        C_TEMUAN =  #{temuan},
        <if test="jenis == 1">
            I_BKUNO = #{noBku},
        </if>
        <if test="jenis == 3 and beban == 'LS' ">
            I_BKUNO = #{noBku},
        </if>
        <if test="beban == 'TU' ">
            I_IDSPD = #{idSpd},
        </if>
        
        E_SETOR = #{keterangan}
        
        
        WHERE  
        I_ID = #{idSetor}
    </update>

    <update id="updateSetorUPGU" parameterType="spp.model.Setor"   >
        UPDATE TMSETOR
        SET
        D_SETOR = #{tglSetor},
        C_TAHUN_ANGGARAN = #{tahunAngg},
        E_SETOR = #{keterangan}
        WHERE  
        I_ID = #{idSetor}
    </update>
    
    <update id="updateSetorBiaya" parameterType="spp.model.Setor"   >
        UPDATE TMSETOR
        SET
        D_SETOR = #{tglSetor},
        E_SETOR = #{keterangan}
        WHERE  
        I_ID = #{idSetor}
    </update>
    
    <update id="updateSetorBtl" parameterType="spp.model.Setor"   >
        UPDATE TMSETOR
        SET
        D_SETOR = #{tglSetor},
        E_SETOR = #{keterangan},
        I_BKUNO = #{noBku}
        WHERE  
        I_ID = #{idSetor}
    </update>
    
    <update id="updateSetorBantuan" parameterType="spp.model.Setor"   >
        UPDATE TMSETOR
        SET
        D_SETOR = #{tglSetor},
        E_SETOR = #{keterangan}
        WHERE  
        I_ID = #{idSetor}
    </update>

    
    <update id="updateRinci" parameterType="spp.model.SetorRinci"   >
        UPDATE TMSETORRINCI
        SET
        V_SETOR = #{nilaiSetor},
        I_PGUN_UBAH = #{idEntry},
        D_PGUN_UBAH = sysdate
        WHERE  
        I_IDBL = #{idBl}
        AND I_IDKEGIATAN = #{idKegiatan}
        AND I_IDBAS = #{idAkun}
    </update>
    
    <update id="updateRinciBiaya" parameterType="spp.model.SetorRinci"   >
        UPDATE TMSETORRINCI
        SET
        V_SETOR = #{nilaiSetor},
        I_PGUN_UBAH = #{idEntry},
        D_PGUN_UBAH = sysdate
        WHERE  
        I_IDBAS = #{idAkun}
    </update>
    
    <update id="updateRinciUPGU" parameterType="spp.model.SetorRinci" >
        UPDATE TMSETORRINCI
        SET
        V_SETOR = #{nilaiSetor},
        <if test="beban == 'TU' ">
            I_IDKEGIATAN = #{idKegiatan},
        </if>
        I_PGUN_UBAH = #{idEntry},
        D_PGUN_UBAH = sysdate
        WHERE  
        I_IDSETOR = #{idSetor}
    </update>
    
    <select id="getNilaiSisaUP" parameterType="java.util.Map"  resultType="java.lang.String">
        SELECT NVL(SUM(TOTAL_SPP_UPGU-TOTAL_SPJ_UPGU-TOTAL_SETOR) ,0) AS SISA_UPGU
        FROM (
        select sum(v_saldoawal) AS TOTAL_SPP_UPGU , 0 AS TOTAL_SPJ_UPGU, 0 AS TOTAL_SETOR <!-- ditambah 5 des 17 oleh zainab untuk menghitung SA-->
        from tmjoursaldoawal
        where I_IDSKPD = #{idskpd}
        AND C_ANGG_TAHUN = #{tahun}
        and c_akun like '1.1.01.03.01.001%'
        
        UNION ALL
        SELECT SUM(TMSPPRINCIBL.V_SPP) AS TOTAL_SPP_UPGU , 0 AS TOTAL_SPJ_UPGU, 0 AS TOTAL_SETOR
        FROM TMSPP , TMSPPRINCIBL, TMSP2D
        WHERE TMSPP.i_ID = TMSPPRINCIBL.I_IDSPP
        AND TMSPP.i_ID = TMSP2D.I_IDSPP
        AND TMSP2D.C_SP2D_SAH ='1'
        AND TMSPP.C_BEBAN IN ('UP' , 'GU')
        AND TMSPP.I_IDSKPD = #{idskpd}
        AND TMSPP.C_ANGG_TAHUN = #{tahun}
        
        UNION ALL
        SELECT 0 AS TOTAL_SPP_TU, SUM(V_KAS_KELUAR - V_KAS_TERIMA) AS TOTAL_SPJ_TU, 0 AS TOTAL_SETOR
        FROM TMBKUSKPDPENGELUARAN
        WHERE C_BEBAN ='UP'
        AND C_TRX = 'JJ'
        AND I_IDSKPD= #{idskpd}
        AND C_ANGG_TAHUN = #{tahun}
        
        UNION ALL
        SELECT 0 AS TOTAL_SPP_UPGU, 0 AS TOTAL_SPJ_UPGU, SUM(v_setor) AS TOTAL_SETOR
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_beban in  ('UP' , 'GU')
        and i_idskpd = #{idskpd} 
        and (c_angg_tahun = #{tahun} or to_char(d_validasi,'YYYY')= #{tahun}) <!-- ditambah 281212, jika ada setoran yg beda TA dan d_valisadi -->
        and tmsetor.i_id != #{idsetor}
        )
        
    </select>
    
    <select id="getNilaiSisaTU" parameterType="java.util.Map"  resultType="java.lang.String">
        SELECT NVL( SUM(TOTAL_SPP_TU-TOTAL_SPJ_TU-TOTAL_SETOR),0) AS SISA_TU
        FROM (
        SELECT SUM(TMSPPRINCIBL.V_SPP) AS TOTAL_SPP_TU , 0 AS TOTAL_SPJ_TU, 0 AS TOTAL_SETOR
        FROM TMSPP , TMSPPRINCIBL, TMSP2D
        WHERE TMSPP.i_ID = TMSPPRINCIBL.I_IDSPP
        AND TMSPP.i_ID = TMSP2D.I_IDSPP
        AND TMSP2D.C_SP2D_SAH ='1'
        AND TMSPP.C_BEBAN = 'TU'
        AND TMSPP.I_IDSKPD= #{idskpd}
        AND TMSPP.C_ANGG_TAHUN = #{tahun}
        AND TMSPPRINCIBL.I_IDKEGIATAN = #{idkegiatan}
        
        UNION ALL
        <!--SELECT 0 AS TOTAL_SPP_TU, SUM(V_SPJ) AS TOTAL_SPJ_TU, 0 AS TOTAL_SETOR
        FROM TMSPJ , TMSPJRINCIBL
        WHERE TMSPJ.i_ID = TMSPJRINCIBL.I_IDSPJ
        AND TMSPJRINCIBL.C_BEBAN ='TU'
        AND TMSPJ.I_IDSKPD= #{idskpd}
        AND TMSPJ.C_ANGG_TAHUN = #{tahun} -->
        SELECT 0 AS TOTAL_SPP_TU, SUM(V_KAS_KELUAR - V_KAS_TERIMA) AS TOTAL_SPJ_TU, 0 AS TOTAL_SETOR
        FROM TMBKUSKPDPENGELUARAN
        WHERE C_BEBAN ='TU'
        AND C_TRX = 'JJ'
        AND I_IDSKPD= #{idskpd}
        AND C_ANGG_TAHUN = #{tahun}
        AND I_IDKEGIATAN = #{idkegiatan}
        
        UNION ALL
        SELECT 0 AS TOTAL_SPP_UPGU, 0 AS TOTAL_SPJ_UPGU, SUM(v_setor) AS TOTAL_SETOR
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_beban = 'TU'
        and i_idskpd = #{idskpd} 
        and c_angg_tahun = #{tahun}
        and i_idkegiatan = #{idkegiatan}
        )
    </select>
    
    <select id="getKegiatanTU" parameterType="java.util.Map" resultType="spp.model.SetorRinci">
        SELECT idKegiatan, kodeKeg, namaKeg FROM  (
        SELECT   ROWNUM AS rn, a.* FROM (        
        
        select i_idkegiatan as idKegiatan, tmdpakegiatan.c_kegiatan as kodeKeg, tmdpakegiatan.n_kegiatan as namaKeg 
        from TMBKUSKPDPENGELUARAN, tmdpakegiatan
        where TMBKUSKPDPENGELUARAN.i_idkegiatan =  tmdpakegiatan.i_id
        and TMBKUSKPDPENGELUARAN.c_angg_tahun = #{tahun}
        and TMBKUSKPDPENGELUARAN.i_idskpd = #{idskpd}
        and c_beban = 'TU'
        and c_trx = 'JO'
        
        <if test="nama != null and nama != '' ">
            and upper(tmdpakegiatan.n_kegiatan) like '%'||upper(#{nama})||'%'
        </if>
        
        <if test="kode != null and kode != '' ">
            and upper(tmdpakegiatan.c_kegiatan) like '%'||upper(#{kode})||'%'
        </if>
        
        ) a) WHERE ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        
    </select>
    
    <select id="getBanyakKegiatanTU" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        select i_idkegiatan
        from TMBKUSKPDPENGELUARAN, tmdpakegiatan
        where TMBKUSKPDPENGELUARAN.i_idkegiatan =  tmdpakegiatan.i_id
        and TMBKUSKPDPENGELUARAN.c_angg_tahun = #{tahun}
        and TMBKUSKPDPENGELUARAN.i_idskpd = #{idskpd}
        and c_beban = 'TU'
        and c_trx = 'JO'
        
        <if test="nama != null and nama != '' ">
            and upper(tmdpakegiatan.n_kegiatan) like '%'||upper(#{nama})||'%'
        </if>
        
        <if test="kode != null and kode != '' ">
            and upper(tmdpakegiatan.c_kegiatan) like '%'||upper(#{kode})||'%'
        </if>
        )
    </select> 
    
    <select id="getBebanSetorUP" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from tmsetor
        where i_idskpd= #{idskpd}
        and c_angg_tahun = #{tahun}
        and c_beban = 'UP'
    </select> 

    <select id="getKegiatanLS" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT noBku, noBuktiDok, idKegiatan, namakegiatan FROM  (
        SELECT   ROWNUM AS rn, a.* FROM (        
        
        select distinct   i_bkuno as noBku, i_doc_bukti as noBuktiDok, i_idkegiatan as idKegiatan, 
        tmdpakegiatan.c_kegiatan||'/'|| n_kegiatan as namakegiatan
        from tmbkuskpdpengeluaran, tmdpakegiatan
        where tmbkuskpdpengeluaran.i_idkegiatan =  tmdpakegiatan.i_id
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpakegiatan.i_idskpd
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpakegiatan.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun} 
        and c_beban = 'LS'
        and c_jenis = #{jenis}
        and c_trx = 'SB'
        and i_idkegiatan is not null
        and i_jour is not null
        and not exists (select 1 from tmsetor where c_angg_tahun = #{tahun} 
        and i_idskpd = #{idskpd} 
        and c_beban = 'LS'
        and c_jenis = #{jenis}
        and c_trx = 'SB'
        and i_id != #{idsetor}
        and i_bkuno = tmbkuskpdpengeluaran.i_bkuno )
        
        <if test="nama != null and nama != '' ">
            and upper(tmdpakegiatan.n_kegiatan) like '%'||upper(#{nama})||'%'
        </if>
        
        <if test="kode != null and kode != '' ">
            and upper(tmdpakegiatan.c_kegiatan) like '%'||upper(#{kode})||'%'
        </if>
        
        order by i_bkuno
        
        ) a) WHERE ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        
    </select>
    
    <select id="getBanyakKegiatanLS" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        select distinct   i_bkuno as noBku, i_doc_bukti as noBuktiDok, i_idkegiatan as idKegiatan, 
        tmdpakegiatan.c_kegiatan||'/'|| n_kegiatan as namakegiatan
        from tmbkuskpdpengeluaran, tmdpakegiatan
        where tmbkuskpdpengeluaran.i_idkegiatan =  tmdpakegiatan.i_id
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpakegiatan.i_idskpd
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpakegiatan.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun} 
        and c_beban = 'LS'
        and c_jenis = #{jenis}
        and c_trx = 'SB'
        and i_idkegiatan is not null
        and i_jour is not null
        and not exists (select 1 from tmsetor where c_angg_tahun = #{tahun} 
        and i_idskpd = #{idskpd} 
        and c_beban = 'LS'
        and c_jenis = #{jenis}
        and c_trx = 'SB'
        and i_id != #{idsetor}
        and i_bkuno = tmbkuskpdpengeluaran.i_bkuno )
        
        
        <if test="nama != null and nama != '' ">
            and upper(tmdpakegiatan.n_kegiatan) like '%'||upper(#{nama})||'%'
        </if>
        
        <if test="kode != null and kode != '' ">
            and upper(tmdpakegiatan.c_kegiatan) like '%'||upper(#{kode})||'%'
        </if>
        
        order by i_bkuno
        )
    </select> 
    
    <select id="getListBlLs" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT   idBl,
        idKegiatan,
        idAkun,
        akun,
        namaAkun,
        nilaiSetor
        FROM (SELECT   ROWNUM AS rn, a.*  FROM (   
        select  tmbkuskpdpengeluaran.i_idkegiatan as idKegiatan, tmbkuskpdpengeluaran.i_idbas as idAkun, 
        trbas.c_akun as akun, n_akun as namaAkun, (v_kas_terima - v_kas_keluar) as nilaiSetor, tmdpabl.i_id as idBl
        from tmbkuskpdpengeluaran, trbas, tmdpabl
        where tmbkuskpdpengeluaran.i_idbas = trbas.i_id
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpabl.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpabl.i_idskpd
        and tmbkuskpdpengeluaran.i_idkegiatan =  tmdpabl.i_idkegiatan
        and tmbkuskpdpengeluaran.i_idbas =  tmdpabl.i_idbas
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun}
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and i_bkuno = #{nobku}
        and tmbkuskpdpengeluaran.i_idkegiatan = #{idkegiatan}
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}   

    </select>
    
    <select id="getBanyakListBlLs" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        select  tmbkuskpdpengeluaran.i_idkegiatan as idKegiatan, tmbkuskpdpengeluaran.i_idbas as idAkun, 
        trbas.c_akun as akun, n_akun as namaAkun, (v_kas_terima - v_kas_keluar) as nilaiSetor, tmdpabl.i_id as idBl
        from tmbkuskpdpengeluaran, trbas, tmdpabl
        where tmbkuskpdpengeluaran.i_idbas = trbas.i_id
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpabl.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpabl.i_idskpd
        and tmbkuskpdpengeluaran.i_idkegiatan =  tmdpabl.i_idkegiatan
        and tmbkuskpdpengeluaran.i_idbas =  tmdpabl.i_idbas
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun}
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and i_bkuno = #{nobku}
        and tmbkuskpdpengeluaran.i_idkegiatan = #{idkegiatan}
        )
    </select> 
    
    <select id="getKegiatanBTL" parameterType="java.util.Map" resultType="spp.model.Setor">
        SELECT noBku, noBuktiDok, ketBku, tglBku FROM  (
        SELECT   ROWNUM AS rn, a.* FROM (        
        
        select distinct   i_bkuno as noBku, i_doc_bukti as noBuktiDok,
        e_doc_bukti as ketBku, d_doc_bukti as tglBku
        from tmbkuskpdpengeluaran 
        where i_idskpd = #{idskpd}
        and c_angg_tahun = #{tahun}
        and c_beban = 'LS'
        and c_jenis = 1
        and c_trx = 'SB'
        and i_jour is not null
        and not exists (select 1 from tmsetor where c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and c_beban = 'LS'
        and c_jenis = 1
        and c_trx = 'SB'
        and i_id != #{idsetor}
        and i_bkuno = tmbkuskpdpengeluaran.i_bkuno )
        <if test="nama != null and nama != '' ">
            and upper(i_doc_bukti) like '%'||upper(#{nama})||'%'
        </if>
        
        order by i_bkuno
        
        
        ) a) WHERE ROWNUM &lt;= #{limit} AND rn &gt; #{offset}
        
    </select>
    
    <select id="getBanyakKegiatanBTL" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        select distinct   i_bkuno as noBku, i_doc_bukti as noBuktiDok,
        e_doc_bukti as ketBku, d_doc_bukti as tglBku
        from tmbkuskpdpengeluaran 
        where i_idskpd = #{idskpd}
        and c_angg_tahun = #{tahun}
        and c_beban = 'LS'
        and c_jenis = 1
        and c_trx = 'SB'
        and i_jour is not null
        and not exists (select 1 from tmsetor where c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and c_beban = 'LS'
        and c_jenis = 1
        and c_trx = 'SB'
        and i_id != #{idsetor}
        and i_bkuno = tmbkuskpdpengeluaran.i_bkuno )
        <if test="nama != null and nama != '' ">
            and upper(i_doc_bukti) like '%'||upper(#{nama})||'%'
        </if>
        
        order by i_bkuno
        )
    </select> 
    
    <select id="getListBtlLs" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        SELECT  idAkun, akun, namaAkun, nilaiSetor, idBl
        FROM (SELECT   ROWNUM AS rn, a.*  FROM (   
        select tmbkuskpdpengeluaran.i_idbas as idAkun, trbas.c_akun as akun, tmdpabtl.i_id as idBl,
        trbas.n_akun as namaAkun, (v_kas_terima-v_kas_keluar) as nilaiSetor
        from tmbkuskpdpengeluaran, trbas, tmdpabtl
        where  tmbkuskpdpengeluaran.i_idbas = trbas.i_id
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpabtl.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpabtl.i_idskpd
        and tmbkuskpdpengeluaran.i_idbas =  tmdpabtl.i_idbas
        and c_trx = 'SB'
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun}
        and i_bkuno = #{nobku}
        )a) xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}   

    </select>
    
    <select id="getBanyakListBtlLs" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        select tmbkuskpdpengeluaran.i_idbas as idAkun, trbas.c_akun as akun, tmdpabtl.i_id as idBl,
        trbas.n_akun as namaAkun, (v_kas_terima-v_kas_keluar) as nilaiSetor
        from tmbkuskpdpengeluaran, trbas, tmdpabtl
        where  tmbkuskpdpengeluaran.i_idbas = trbas.i_id
        and tmbkuskpdpengeluaran.c_angg_tahun =  tmdpabtl.c_angg_tahun
        and tmbkuskpdpengeluaran.i_idskpd =  tmdpabtl.i_idskpd
        and tmbkuskpdpengeluaran.i_idbas =  tmdpabtl.i_idbas
        and c_trx = 'SB'
        and tmbkuskpdpengeluaran.i_idskpd = #{idskpd}
        and tmbkuskpdpengeluaran.c_angg_tahun = #{tahun}
        and i_bkuno = #{nobku}
        )
    </select> 
    
    <select id="getDataBku" parameterType="java.util.Map"  resultType="spp.model.Setor">
        select distinct i_bkuno ||'/'|| i_doc_bukti as ketBku
        from tmbkuskpdpengeluaran where c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd} and i_bkuno =  #{nobku}
    </select>
    
    <select id="getListTU" parameterType="java.util.Map"  resultType="spp.model.SetorRinci">
        
        SELECT   idBl, idAkun, akun, namaAkun, nilaiAnggaran, nilaiSetor
        FROM   (SELECT   ROWNUM AS rn, a.* FROM   (
        SELECT  idAkun,idBl,c_akun as akun, n_akun as namaAkun, nilaiAnggaran,nilaiSetor 
        from (select i_idbas as idAkun, sum(i_idbl) as idBl, sum(nilaiAnggaran - nilaiSebelum) as nilaiAnggaran, sum(nilaiSetor) as nilaiSetor  from(
        select i_idbas, i_idbl,  nvl(tmspprincibl.v_spp,0) as nilaiAnggaran, 0 as nilaiSetor, 0 as nilaiSebelum
        from tmspp,tmspprincibl, tmsp2d
        where tmspp.i_id = tmspprincibl.i_idspp
        and tmspp.i_id = tmsp2d. i_idspp
        and tmspp.c_angg_tahun = #{tahun}
        and tmspp.i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        and c_sp2d_sah = 1
        
        union all
        select i_idbas, 0 as i_idbl, 0 as nilaiAnggaran, nvl(v_setor,0) as nilaiSetor,  0 as nilaiSebelum
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        and i_idsetor = #{idsetor}
        
        union all
        select i_idbas, 0 as i_idbl, 0 as nilaiAnggaran, 0 as nilaiSetor, nvl(v_setor,0) as nilaiSebelum
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        and i_idsetor != #{idsetor}
        ) group by i_idbas) ZZZ, trbas
        where ZZZ.idAkun = trbas.i_id )a)xxxx
        WHERE   ROWNUM &lt;= #{limit} AND rn &gt; #{offset}   
        
    </select>
    
    <select id="getBanyakListTU" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) as banyak from (
        SELECT  idAkun,idBl,c_akun as akun, n_akun as namaAkun, nilaiAnggaran,nilaiSetor 
        from (select i_idbas as idAkun, sum(i_idbl) as idBl, sum(nilaiAnggaran - nilaiSebelum) as nilaiAnggaran, sum(nilaiSetor) as nilaiSetor  from(
        select i_idbas, i_idbl,  nvl(tmspprincibl.v_spp,0) as nilaiAnggaran, 0 as nilaiSetor, 0 as nilaiSebelum
        from tmspp,tmspprincibl, tmsp2d
        where tmspp.i_id = tmspprincibl.i_idspp
        and tmspp.i_id = tmsp2d. i_idspp
        and tmspp.c_angg_tahun = #{tahun}
        and tmspp.i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        union all
        select i_idbas, 0 as i_idbl, 0 as nilaiAnggaran, nvl(v_setor,0) as nilaiSetor,  0 as nilaiSebelum
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        and i_idsetor = #{idsetor}
        union all
        select i_idbas, 0 as i_idbl, 0 as nilaiAnggaran, 0 as nilaiSetor, nvl(v_setor,0) as nilaiSebelum
        from tmsetor, tmsetorrinci
        where tmsetor.i_id =  tmsetorrinci.i_idsetor
        and c_angg_tahun = #{tahun}
        and i_idskpd = #{idskpd}
        and i_idspd = #{idspd}
        and i_idkegiatan = #{idkegiatan}
        and i_idsetor != #{idsetor}
        ) group by i_idbas) ZZZ, trbas
        where ZZZ.idAkun = trbas.i_id 
        )
    </select> 
    
    <select id="getSalsoAwalLs" parameterType="java.util.Map"  resultType="spp.model.Setor">
        select sum (nilaisa-nilaisetor) as nilaiSA from (
        select nvl(sum(V_SALDOAWAL_DEBET),0) as nilaisa, 0 as nilaisetor
        from tmjoursaldoawal 
        where  c_angg_tahun = #{tahun} 
        and i_idskpd = #{idskpd}
        and i_idbas = 3897
        union all
        select 0 as nilaisa, nvl(sum(v_setor),0) as nilaisetor
        from tmsetor, tmsetorrinci
        where  tmsetor.i_id = tmsetorrinci.i_idsetor
        and c_angg_tahun = #{tahun} 
        and i_idskpd = #{idskpd}
        and C_BEBAN = 'LS'
        and C_SETOR_SA = 1
        and tmsetor.i_id != #{idsetor}
        )
    </select> 
    
    <select id="getNilaiSetorSA" parameterType="java.lang.Integer"  resultType="java.lang.Integer">
        select V_SETOR from tmsetorrinci where i_idsetor = #{value}
    </select>
    
    
</mapper>